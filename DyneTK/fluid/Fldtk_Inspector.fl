# data file for the Fltk User Interface Designer (fluid)
version 1.0108 
header_name {.h} 
code_name {.cxx}
comment {//
// DyneTK, The Dyne Toolkit
// Copyright (C) 2007 Matthias Melcher
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
//
} {in_source in_header
} 

decl {\#include "fltk/Flio_Inspector.h"} {public
} 

decl {\#include "fltk/Flmm_Console.h"} {public
} 

decl {\#include "main.h"} {public
} 

widget_class Fldtk_Inspector {open
  xywh {821 191 775 139} type Double resizable visible position_relative
} {
  Fl_Group {} {open
    xywh {0 0 775 35} box FLAT_BOX
  } {
    Fl_Button wConnect {
      callback {InspectorConnect();}
      tooltip {Connect/Disconnect} image {../images/toolbox_closed.xpm} deimage {../images/toolbox_inactive.xpm} xywh {5 5 25 25} labelsize 9 labelcolor 32
      code0 {wInspectorConnect = wConnect;}
    }
    Fl_Button tStopOnThrows {
      callback {InspectorStopOnThrows();}
      tooltip {Stop on throws} image {../images/stop.png} deimage {../images/stop_da.png} xywh {30 5 25 25} labelsize 9 labelcolor 32 deactivate
    }
    Fl_Button tTraceOff {
      callback {InspectorTraceOff();}
      tooltip {Trace off} image {../images/pencil.png} deimage {../images/pencil_da.png} xywh {55 5 25 25} labelsize 9 labelcolor 32 deactivate
    }
    Fl_Button tStackTrace {
      callback {InspectorStackTrace();}
      tooltip {Stack trace} image {../images/layers.png} deimage {../images/layers_da.png} xywh {80 5 25 25} labelsize 9 labelcolor 32 deactivate
    }
    Fl_Button tExitBreakLoop {
      callback {InspectorExitBreakLoop();}
      tooltip {Exit break loop} image {../images/door_in.png} deimage {../images/door_in_da.png} xywh {105 5 25 25} labelsize 9 labelcolor 32 deactivate
    }
    Fl_Choice tPrintDepth {
      tooltip {Print Depth} xywh {135 6 50 23} down_box BORDER_BOX deactivate
    } {
      MenuItem {} {
        label 0
        callback {InspectorPrintDepth(0);}
        xywh {10 10 100 20} labelsize 11
      }
      MenuItem {} {
        label 1
        callback {InspectorPrintDepth(1);}
        xywh {10 10 100 20} labelsize 11
      }
      MenuItem {} {
        label 2
        callback {InspectorPrintDepth(2);}
        xywh {10 10 100 20} labelsize 11
      }
      MenuItem {} {
        label 3
        callback {InspectorPrintDepth(3);}
        xywh {20 20 100 20} labelsize 11
      }
      MenuItem {} {
        label 4
        callback {InspectorPrintDepth(4);}
        xywh {20 20 100 20} labelsize 11
      }
      MenuItem {} {
        label 5
        callback {InspectorPrintDepth(5);}
        xywh {20 20 100 20} labelsize 11
      }
      MenuItem {} {
        label 6
        callback {InspectorPrintDepth(6);}
        xywh {30 30 100 20} labelsize 11
      }
      MenuItem {} {
        label 7
        callback {InspectorPrintDepth(7);}
        xywh {30 30 100 20} labelsize 11
      }
      MenuItem {} {
        label 8
        callback {InspectorPrintDepth(8);}
        xywh {30 30 100 20} labelsize 11
      }
      MenuItem {} {
        label 9
        callback {InspectorPrintDepth(9);}
        xywh {20 20 100 20} labelsize 11
      }
    }
    Fl_Box {} {
      xywh {440 5 120 25} resizable
    }
    Fl_Box serial {
      xywh {715 7 55 21} box DOWN_BOX
      code0 {wInspectorSerial = serial;}
      class Flio_Inspector
    }
    Fl_Button {} {
      label {Test
1}
      callback {send_test(1);}
      xywh {215 5 25 25} labelsize 9 labelcolor 32 hide
    }
    Fl_Button {} {
      label {Test
2}
      callback {send_test(2);}
      xywh {240 5 25 25} labelsize 9 labelcolor 32 hide
    }
    Fl_Button {} {
      label {Test
3}
      callback {send_test(3);}
      xywh {265 5 25 25} labelsize 9 labelcolor 32 hide
    }
  }
  Fl_Text_Editor console {
    tooltip {Connect/Disconnect} xywh {0 35 775 104} when 10 textfont 4 textsize 12 resizable
    code0 {o->buffer(new Fl_Text_Buffer);}
    code1 {wConsole = console;}
    class Flmm_Console
  }
  Function {activate_menus(unsigned int mask)} {open return_type void
  } {
    code {// bits in the mask have the following meanings:
//      bit 3: Inspector is connected to a Newton device

if ( (mask & 0x00000008) == 0x00000008 ) {
  tStopOnThrows->activate();
  tTraceOff->activate();
  tStackTrace->activate();
  tExitBreakLoop->activate();
  tPrintDepth->activate();
} else {
  tStopOnThrows->deactivate();
  tTraceOff->deactivate();
  tStackTrace->deactivate();
  tExitBreakLoop->deactivate();
  tPrintDepth->deactivate();
}} {}
  }
} 

comment {
//
// Copyright (C) 2007 Matthias Melcher
//} {in_source in_header
} 
