

 Message Pad 2001
==================

Hardware:
 - CPU:
    o StrongARM SA-110 (www.arm.com, http://developer.intel.com/design/pca/applicationsprocessors/index.htm)
       * improved ARM6 architecture (ARMv4=StrongARM) (earlier: ARM 610)
       * running in Big Endian mode (32 bit)
    o see: sa110TechMan.pdf or http://bwrc.eecs.berkeley.edu/Research/Pico_Radio/Test_Bed/Hardware/Documentation/ARM/sa1100BriefDatasheet.pdf
      (btw, the 1100 seems to be what Apple requested to get most of the custom chip features right 
      into the CPU, so expect plenty of similarities between the SA110+Cirrus and the SA1100 and 1110)
    o 162 MHz RISC
    o 8000.0000 to bfff.ffff contains CPU registers
    o 0000 reset (used)
    o 0004 undefined instruction (used)
    o 0008 software int (used)
    o 000c prefetch abort (unsused at least until after boot)
    o 0010 data abort (used)
    o 0018 IRQ (used)
    o 001c FIQ (unsused at least until after boot)
    o SWI's:
      00      GetPortSWI
      01      PortSendSWI
      02      PortReceiveSWI
      03      EnterAtomicSWI
      04      ExitAtomicSWI
      05      GenericSWI
      06      GenerateMessageIRQ
      07      PurgeMMUTBLEntry
      08      FlushMMU
      09      FlushCache
      0a      GetCPUVersion
      0b      SemaphoreOpGlue
      0c      SetDomainRegister
      0d      SMemSetBufferSWI
      0e      SMemGetSizeSWI
      0f      SMemCopyToSharedSWI
      10      SMemCopyFromSharedSWI
      11      SMemMsgSetTimerParmsSWI
      12      SMemMsgSetMsgAvailPortSWI
      13      SMemMsgGetSenderTaskIdSWI
      14      SMemMsgSetUserRefConSWI
      15      SMemMsgGetUserRefConSWI
      16      SMemMsgCheckForDoneSWI
      17      SMemMsgMsgDoneSWI
      18      TurnOffCache
      19      TurnOnCache
      1b      MonitorDispatchSWI
      1c      MonitorExitSWI
      1d      MonitorThrowSWI
      1e      EnterFIQAtomicSWI
      1f      ExitFIQAtomicSWI
      20      MonitorFlushSWI
      21      PortResetFilterSWI
      22      DoSchedulerSWI
 - MMU:
    o page fault system is used in every detail!
 - ROM:
    o 8 MB at 0x0000.0000
 - RAM:
    o 4 MB at 0x4000 0000
    o active packages are mapped at 0x60000000 to 0x67FFFFFF
    o packages are executed from 0x6xxx.xxxx (virtual memory, domain 7)
 - Flash
    o 4 MB at 0x2000 0000
 - DMA
    o sound
    o serial ports
    o LCD
 - GPIO
    o generates interrupts 
    o receives power and reset button positions
    o loosely linked to the ADC for the touch panel
 - PCMCIA
    o optional RAM, Ethernet, WLAN, etc.
    o 2x type II
    o mapped to 0x0c00.2000 etc.
 - Screen
    o 320x480 Pixels
    o 4 bit gray
    o mapped memory starting at $E000.0000 to $E001.2C00
    o offset 0 is bottom left, then going up, then going right
    o one byte is two pixels at 4 bit each
 - Digitizer
    o high res, yet noisy ADC
    o triggers interrupts that wake up the cpu
 - Serial port
    o uses DMA for very high speed (read up on Apple Geo Port technology)
 - IR port
 - Speaker
    o uses DMA and interrupt
 - Microphone
 - Power
 - Modem

Software:
 - Newton OS2.1

Interrupts:
; there are two interrupt sources, GPIO and CPU
; Power switch: 01000040 TGPIOInterface::MainGPIOInterrupt (R4=interrupt?)
; GPIO:
;   00000001: IRQ - GPIO ???
; CPU (Set IR Register Bit): 
;   00000020: IRQ - TTimerEngine::Alarm()
;   00000040: IRQ - RealTimeClock::InterruptEntry()
;   00000080: FIQ - TSerialDMAEngine::DMAInterrupt()
;   00000100: FIQ - TSerialDMAEngine::DMAInterrupt()
;   00000200: FIQ - TSerialDMAEngine::DMAInterrupt()
;   00000400: Reset - Causes a warm reboot
;   00001000: IRQ - PSoundDriver::OutputIntHandler
;   00002000: FIQ - Read DMA 2.1/6, write DMA 2.2/6 TSerialDMAEngine::DMAInterrupt
;   00004000: FIQ - Read DMA 2.1/7, write DMA 2.2/7 TSerialDMAEngine::DMAInterrupt
;   00008000: IRQ - TBIOInterface::MainKeynessInterrupt Read 0x0f048000 etc.
;   00010000: FIQ - Tric: TCardSocket::InterruptDispatcher Read PCMCIA registers
;   00100000: IRQ - GPIOInterface::MainGPIOInterrupt
;   00400000: FIQ - ResetFromResetSwitch (0f110000 seems to contain the reset switch position)
;   01000000: IRQ - GPIOInterface::MainGPIOInterrupt
;   02000000: IRQ - Tric: TCardSocket::InterruptDispatcher
;   04000000: FIQ - Reset
;   08000000: FIQ - Reset
;   10000000: IRQ - CWakeupInkerFromInterrupt (Pen set on Tablet)
;    FIQ mask = 0C416380




